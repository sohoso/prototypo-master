M 	0 {{ xHeight / 2 }}
C+ 	{{ roundness }} 0 {{ - breakPath / 2 }} {{ self[1].x + ( self[3].x - self[1].x ) * (222/364) }} {{ xHeight + overshoot }}
C+ 	{{ roundness }} 0 {{ -30 * width }} {{ width * 364 }} {{ xHeight * (402/465) }}
L 	{{ self[3].x }} {{ ascenderHeight }}
l 	{{ thickness }} 0
L 	{{ self[5].x }} 0
l 	{{ -thickness * (77/80) }} 0
L 	{{ self[7].x - thickness *(3/80) }} {{ 50 + breakPath / 2 }}
C+ 	{{ roundness }} {{ 30 * width + breakPath }} {{ 0 }} {{ self[2].x }} {{ -overshoot}}
C+ 	{{ roundness }} 0 0 {{ self[1].x }} {{ self[1].y }}
Z
M 	{{ self[1].x + thickness }} {{ self[1].y }}
C- 	{{ roundness }} 0 0 {{ self[12].x + ( self[14].x - self[12].x ) / 2 }} {{ self[9].y + thickness * (73/80) * contrast }}
C- 	{{ roundness }} {{ - breakPath }} 0 {{ self[3].x + thickness * (3/80) }} {{ self[1].y }}
C- 	{{ roundness }} 0 0 {{ self[13].x }} {{ self[2].y - thickness * (71/80) * contrast }}
C- 	{{ roundness }} 0 0 {{ self[12].x }} {{ self[12].y }}
Z

replace from self[4] at {{ {y: self[4].y - serifHeight - serifHeight * serifCurve} }} to self[5] at {{ {x: self[4].x + thickness } }} with serif-top-left transform {{ "rotate("+ -serifRotate +")" }}
replace from self[6] at {{ {y: serifHeight + serifHeight * serifCurve} }} to self[7] at {{ {x: self[6].x - thickness } }} with serif-bottom-right transform {{ "rotate("+ -serifRotate +")" }}

// replace from self[6] at {{ {y: thickness + xHeight * (20/465) } }} to self[8] at {{ { x: self[8].x  } }} with serif-curve-bottom {{ { y: self[8].y, angle: 30 } }}
